from gurobi import *
import pandas as pd
import numpy as np

Nodes = ['O','A','B','C','D','E','T']
Arcs = {
    ('O','A'):20,
    ('O','B'):50,
    ('O','C'):40,
    ('A','B'):20,
    ('A','D'):70,
    ('B','C'):10,
    ('B','D'):40,
    ('B','E'):30,
    ('C','E'):40,
    ('D','E'):10,
    ('D','T'):50,
    ('E','T'):70
}

model = Model('Shortest Path Problem')
# add decision variables
X = {}
for key in Arcs.keys():
    index = 'x_' + key[0] + ',' + key[1]
    #print(key[0], key[1])
    X[key] = model.addVar(vtype = GRB.BINARY,name = index)
    print(key)
    
    
 #add objective function
obj = LinExpr(0)
for key in Arcs.keys():
    obj.addTerms(Arcs[key],X[key])
model.setObjective(obj,GRB.MAXIMIZE)


# constraint1 1 and constraint 2
lhs_1 = LinExpr(0) 
lhs_2 = LinExpr(0)
for key in Arcs.keys():
    if(key[0] == 'O'): 
        lhs_1.addTerms(1, X[key])
    elif(key[1] == 'T'): 
        lhs_2.addTerms(1, X[key])
model.addConstr(lhs_1 == 1, name = 'Original flow') 
model.addConstr(lhs_2 == 1, name = 'Termination flow')

# constraints 3
for node in Nodes: 
    lhs = LinExpr(0)
    if(node != 'O' and node != 'T'): 
        for key in Arcs.keys():
            if(key[1] == node):
                lhs.addTerms(1, X[key]) 
            elif(key[0] == node):
                lhs.addTerms(-1, X[key]) 
    model.addConstr(lhs == 0, name = 'flow conservation')

model.write('model_spp.lp')
model.optimize()
print(model.ObjVal)
for var in model.getVars():
    if(var.x>0):
        print(var.varName,'\t', var.x)
